{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","updatedTodos","App","useState","setTitle","setUserId","setTodos","isTitle","setIsTitle","isUser","setIsUser","action","method","onSubmit","event","preventDefault","reduce","acumulator","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed9e1c06.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos:Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport './App.scss';\n\nfunction getUserById(userId: number) {\n  const foundUser = usersFromServer.find((user: User) => (\n    user.id === userId\n  ));\n\n  return foundUser || null;\n}\n\nconst updatedTodos: Todo[] = todosFromServer.map((todo) => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(updatedTodos);\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitle(false);\n  };\n\n  const handleChangeSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setIsUser(false);\n  };\n\n  const getMaxId = () => {\n    return todos.reduce((acumulator: number, todo: Todo) => {\n      if (todo.id > acumulator) {\n        return todo.id;\n      }\n\n      return acumulator;\n    }, 0);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setIsUser(true);\n\n      return;\n    }\n\n    if (!title) {\n      setIsTitle(true);\n\n      return;\n    }\n\n    const id = getMaxId() + 1;\n\n    setTodos(\n      [...todos,\n        {\n          id, title, completed: false, userId, user: getUserById(userId),\n        },\n      ],\n    );\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </label>\n\n          {isTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userId}\n              onChange={handleChangeSelect}\n            >\n\n              <option value={0} disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}